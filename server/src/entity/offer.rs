//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "offer")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub offer_id: Uuid,
    pub title: String,
    pub description: Option<String>,
    pub tariff_ids: Vec<Uuid>,
    pub is_active: bool,
    pub created_at: DateTime,
    pub img: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_one = "super::calculator::Entity")]
    Calculator,
    #[sea_orm(has_many = "super::offer_like::Entity")]
    OfferLike,
}

impl Related<super::calculator::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Calculator.def()
    }
}

impl Related<super::offer_like::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::OfferLike.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
